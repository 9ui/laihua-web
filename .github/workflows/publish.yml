# 该workflow的名称，可以随意填写
name: Publish And Deploy

# workflow的触发事件，这里代表release分支的push事件触发
on:
  push:
    branches: [main]

# 任务
jobs:
  build:
    # 运行所需要的环境
    runs-on: ubuntu-latest

    steps:
      # 检查公共的三方js文件是否可用
      - name: Test for public javascript library vulnerabilities
        uses: lirantal/is-website-vulnerable@master
        with:
          scan-url: 'https://web.90c.vip'

      # 切换分支
      - name: Checkout
        uses: actions/checkout@v2

      # 下载 git submodule
      - uses: srt32/git-actions@v0.0.3
        with:
          args: git submodule update --init --recursive

      # 使用 node:14
      - name: use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14

      # 设置缓存路径
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # yarn缓存
      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # 缓存依赖文件
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

        # 下载依赖
      - run: yarn
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'
      # 网站性能监控
      - name: Run Lighthouse
        uses: foo-software/lighthouse-check-action@master
        id: lighthouseCheck
        with:
          urls: 'https://web.90c.vip'

      # 处理性能结果
      - name: Handle Lighthouse Check results
        uses: foo-software/lighthouse-check-status-action@master
        with:
          lighthouseCheckResults: ${{ steps.lighthouseCheck.outputs.lighthouseCheckResults }}
          # 最低Accessibility分数
          minAccessibilityScore: '70'
          # 性能最低分
          minBestPracticesScore: '30'
          minPerformanceScore: '30'
          minProgressiveWebAppScore: '30'
          minSeoScore: '30'

      # 构建
      - name: Build
        run: |
          npm run build-pro
        env:
          CI: true

      # 生成压缩包
      - run: tar -zcvf release.tgz .nuxt  nuxt.config.ts package.json  pm2.config.json postbuild.ts config tsconfig.json yarn.lock

      # 上传文件
      - name: Upload
        uses: easingthemes/ssh-deploy@v2.0.7
        env:
          SSH_PRIVATE_KEY: ${{ secrets.ACCESS_TOKEN }}
          ARGS: '-avz --delete'
          SOURCE: 'release.tgz'
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.TARGET }}

      # 部署
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.ACCESS_TOKEN }}
          # 远程服务器端口号
          port: ${{ secrets.PORT }}
          # 命令超时配置 默认10m
          command_timeout: 20m
          # 运行在远程服务器的命令
          # 1. 进入项目目录
          # 2. 下载发布包
          # 3. 解压缩发布包
          # 4. 安装生产环境依赖
          # 5. pm2运行配置文件
          script: |
            cd /www/wwwroot/web.90c.vip
            tar zxvf release.tgz
            yarn install --production
            pm2 reload pm2.config.json

      # Notify
      - name: Success
        uses: rjstone/discord-webhook-notify@v1
        if: success()
        with:
          severity: info
          avatarUrl: https://avatars.githubusercontent.com/u/71952965?s=400&u=b4330492595a29cdba1c8c3029c078d1cb70631e&v=4
          username: ${{ github.event.head_commit.committer.name }}
          description: 以后完善
          footer: ${{ github.event.ref }}
          text: 平台更新.
          details: ${{ github.event.head_commit.message }}
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Failure
        uses: rjstone/discord-webhook-notify@v1
        if: failure()
        with:
          severity: error
          details: 平台更新失败
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Cancelled
        uses: rjstone/discord-webhook-notify@v1
        if: cancelled()
        with:
          severity: warn
          details: 平台取消更新
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
